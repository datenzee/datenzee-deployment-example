version: '3'
services:

  dsw-server:
    image: datastewardshipwizard/wizard-server:3.19
    restart: always
    ports:
    # (!) Expose only for local deployment, externally use HTTPS proxy
      - 127.0.0.1:3000:3000
    depends_on:
      - postgres
      - minio
    volumes:
      - ./dsw.yml:/application/engine-wizard/config/application.yml:ro

  dsw-client:
    image: datastewardshipwizard/wizard-client:3.19
    restart: always
    ports:
    # (!) Expose only for local deployment, externally use HTTPS proxy
      - 127.0.0.1:8080:80
    environment:
      API_URL: http://localhost:3000

    volumes:
      - ./client/variables.scss:/src/scss/customizations/_variables.scss
      - ./client/extra.scss:/src/scss/customizations/_extra.scss
      - ./client/favicon.ico:/usr/share/nginx/html/favicon.ico
      - ./client/assets:/usr/share/nginx/html/assets

  docworker:
    image: datastewardshipwizard/document-worker:3.19
    restart: always
    depends_on:
      - postgres
      - minio
      - dsw-server
    volumes:
      - ./dsw.yml:/app/config.yml:ro

  postgres:
    image: postgres:13.7
    restart: always
    # (!) Expose only for debugging locally or set-up authentication
    ports:
      - 127.0.0.1:15432:5432
    environment:
      POSTGRES_DB: engine-wizard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # (!) Mount for persistent data
    volumes:
      - ./db-data/dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    #  - db-data:/var/lib/postgresql/data
    # OR
    #  - ./db-data/data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2022-08-02T23-59-16Z
    command: server /data --console-address ":9001"
    # (!) Expose only for debugging locally or set-up authentication
    ports:
      - 127.0.0.1:9000:9000
      - 127.0.0.1:9001:9001
    # (!) Mount and backup for persistent data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioPassword
    # (!) Mount for persistent data
    volumes:
    #  - s3-data:/data
    # OR
     - ./s3-data/data:/data

# volumes:
#   db-data:
#   s3-data:
